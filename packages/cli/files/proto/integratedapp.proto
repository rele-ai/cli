syntax = "proto3";

package integratedapp;

option go_package = "github.com/rele-ai/rb/src/integrations-gw/internal/integratedapp";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";

// ---------- Hubspot Service ----------
service IntegratedApps {
 // Notify the integrated application about the message
 rpc Notify(NotifyRequest) returns (NotifyResponse) {
    option (google.api.http) = {
			post: "/v1/notify"
			body: "*"
		};
 }
}

// ----------- messages:internal -----------
message NotifyRequest {
 // define the type of operation
 string operation_key = 1;

 // the payload of the request
 // value is used for free data formats
 google.protobuf.Struct payload = 2;
}

message NotifyResponse {
  // define the operation type
  string operation_key = 1;

  // the payload of the response
  // struct is a free map[string]Value{} object
  google.protobuf.Struct payload = 2;
}

// // ----------- messages:value -----------
// // Please check https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/struct.proto for more information

// // The JSON representation for `Struct` is JSON object.
// message Struct {
//  // Unordered map of dynamically typed values.
//  map<string, Value> fields = 1;
// }

// // `Value` represents a dynamically typed value which can be either
// // null, a number, a string, a boolean, a recursive struct value, or a
// // list of values. A producer of value is expected to set one of that
// // variants, absence of any variant indicates an error.
// //
// // The JSON representation for `Value` is JSON value.
// message Value {
//  // The kind of value.
//  oneof kind {
//    // Represents a null value.
//    NullValue null_value = 1;
//    // Represents a double value.
//    double number_value = 2;
//    // Represents a string value.
//    string string_value = 3;
//    // Represents a boolean value.
//    bool bool_value = 4;
//    // Represents a structured value.
//    Struct struct_value = 5;
//    // Represents a repeated `Value`.
//    ListValue list_value = 6;
//  }
// }

// // `NullValue` is a singleton enumeration to represent the null value for the
// // `Value` type union.
// //
// //  The JSON representation for `NullValue` is JSON `null`.
// enum NullValue {
//  // Null value.
//  NULL_VALUE = 0;
// }

// // `ListValue` is a wrapper around a repeated field of values.
// //
// // The JSON representation for `ListValue` is JSON array.
// message ListValue {
//  // Repeated field of dynamically typed values.
//  repeated Value values = 1;
// }
